// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Device {
  id         Int       @id @default(autoincrement())
  device_id  String    @unique
  name       String
  lat        Float
  lng        Float
  lastSeenAt DateTime?
  isOnline   Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // relations (ชื่อให้ตรงกับที่โค้ด include: { rains, images })
  rains   RainReading[]
  images  Image[]

  @@index([updatedAt])
  @@index([lat, lng])
}

model RainReading {
  id          Int       @id @default(autoincrement())
  deviceId    Int
  device      Device    @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  timestamp   DateTime  @default(now())
  rainfall_mm Float

  @@index([deviceId, timestamp(sort: Desc)])
}

model Image {
  id        Int       @id @default(autoincrement())
  deviceId  Int
  device    Device    @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  timestamp DateTime  @default(now())
  filePath  String
  width     Int?
  height    Int?
  sizeKB    Int?

  @@index([deviceId, timestamp(sort: Desc)])
}

model WeatherCache {
  id        Int       @id @default(autoincrement())
  latHash   String
  lngHash   String
  provider  String
  payload   Json
  fetchedAt DateTime  @default(now())

  @@index([latHash, lngHash, provider, fetchedAt(sort: Desc)])
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String
  role         String    @default("admin")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
